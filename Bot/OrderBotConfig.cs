using System;
using NHSE.Core;

namespace SysBot.ACNHOrders
{
    [Serializable]
    public class OrderBotConfig : IConfigItem
    {
        private int _maxQueueCount = 50;
        private int _timeAllowed = 180;
        private int _waitForArriverTime = 60;
        private int _arrivalTime = 60;

        /// <summary> Amount of people allowed in the queue before the bot stop accepting requests. Won't accept more than 99 (around 8 hours) </summary>
        public int MaxQueueCount
        {
            get => _maxQueueCount;
            set => _maxQueueCount = Math.Max(1, Math.Min(99, value));
        }

        /// <summary> Maximum amount of time in seconds before a user is kicked from your island to avoid loiterers. Minimum is 2 minutes (120 seconds). </summary>
        public int UserTimeAllowed 
        { 
            get => _timeAllowed; 
            set => Math.Max(120, value); 
        }

        /// <summary> Maximum amount of time to wait until they're a no-show and the bot restarts in seconds. </summary>
        public int WaitForArriverTime
        {
            get => _waitForArriverTime;
            set => Math.Max(45, value);
        }

        /// <summary> Guesstimation amount of time in seconds it takes for someone to player the arrival animation from inability to move to start. Minimum is 60 seconds, depends on both of your connections. </summary>
        public int ArrivalTime
        {
            get => _arrivalTime;
            set => Math.Max(60, value);
        }

        public string CompleteOrderMessage { get; set; } = "Have a great day!";

        /// <summary>
        /// Wraps all items generated by the bot. Will be ignored for placed items
        ///  </summary>
        public bool WrapAllItems { get; set; } = false; // doesn't wrap DIY recipes

        /// <summary> Wrapping paper to apply when <see cref="WrapAllItems"/> is true. </summary>
        public ItemWrappingPaper WrappingPaper { get; set; } = ItemWrappingPaper.White;
    }
}
